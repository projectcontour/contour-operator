name: Build and Test

# Trigger the workflow on push or pull request
on:
   # Run every hour
  schedule:
    - cron: '0 * * * *'
  push:
  pull_request:

env:
  GOPROXY: https://proxy.golang.org/
jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: deps
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          echo "/usr/local/kubebuilder/bin" >> $GITHUB_PATH
      - name: test
        run: |
          make test
      - name: codeCoverage
        if: ${{ success() }}
        run: |
          CODECOV_NAME=coverage.out bash <(curl -s https://codecov.io/bash)
  test-example-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # use stable kubernetes_version values since they're included
        # in the name of the GitHub Actions job, and we don't want to
        # have to update branch protection rules every time we change
        # a Kubernetes version number.
        kubernetes_version: ["kubernetes:latest", "kubernetes:n-1", "kubernetes:n-2"]
        # include defines an additional variable (the specific node
        # image to use) for each kubernetes_version value.
        include:
          - kubernetes_version: "kubernetes:latest"
            node_image: "docker.io/kindest/node:v1.21.1"
          - kubernetes_version: "kubernetes:n-1"
            node_image: "docker.io/kindest/node:v1.20.2"
          - kubernetes_version: "kubernetes:n-2"
            node_image: "docker.io/kindest/node:v1.19.7"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: deps
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          echo "/usr/local/kubebuilder/bin" >> $GITHUB_PATH
      - name: test-example
        env:
          NODEIMAGE: ${{ matrix.node_image }}
        run: |
          make local-cluster load-image example test-example
  test-e2e-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # use stable kubernetes_version values since they're included
        # in the name of the GitHub Actions job, and we don't want to
        # have to update branch protection rules every time we change
        # a Kubernetes version number.
        kubernetes_version: ["kubernetes:latest", "kubernetes:n-1", "kubernetes:n-2"]
        # include defines an additional variable (the specific node
        # image to use) for each kubernetes_version value.
        include:
          - kubernetes_version: "kubernetes:latest"
            node_image: "docker.io/kindest/node:v1.21.1"
          - kubernetes_version: "kubernetes:n-1"
            node_image: "docker.io/kindest/node:v1.20.2"
          - kubernetes_version: "kubernetes:n-2"
            node_image: "docker.io/kindest/node:v1.19.7"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: deps
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          echo "/usr/local/kubebuilder/bin" >> $GITHUB_PATH
      - name: test-e2e
        env:
          NODEIMAGE: ${{ matrix.node_image }}
        run: |
          make local-cluster load-image test-e2e
  codespell:
    name: Codespell
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Codespell
        uses: codespell-project/actions-codespell@master
        with:
          skip: .git,./vendor,go.*
          ignore_words_file: './.codespell.ignorewords'
          check_filenames: true
          check_hidden: true
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.38
          only-new-issues: true
          args: --build-tags=e2e
